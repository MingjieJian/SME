[build-system]
# 构建后端只需要能“构建”你的包的依赖；前端工具（如 `build`）不必写在这里
requires = [
  "setuptools>=80",
  "wheel",
  "numpy>=1.23",             # 如果扩展编译期需要 NumPy 头文件，请保留
  "versioneer[toml]>=0.22"   # 用 versioneer 动态注入版本
]
build-backend = "setuptools.build_meta"

[project]
name = "pysme"
requires-python = ">=3.9"
# 你用 versioneer → 让版本“动态生成”
dynamic = ["version"]
dependencies = [
  "numpy>=1.23,<2.0",
  "scipy>=1.9,<2.0",
  "pandas>=1.5,<3.0",
  "astropy>=6,<8",
  "tqdm>=4.64",
  "colorlog>=6.7",
  "emcee>=3.1",
  "pybtex>=0.24",
  "flex-format>=0.2.18",
  "plotly>=5.11,<6.0",
  "matplotlib>=3.6,<4.0",
  "requests>=2.28,<3.0",
  "wget>=3.2",
]
# 可选：补充元数据（强烈建议）
# authors = [{ name = "Your Name", email = "you@example.com" }]
# description = "Short description of pysme"
# readme = "README.md"
# license = { file = "LICENSE" }

# 注意：classifiers 不是一个子表，而是 project 里的一个“列表字段”
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.2,<9",
  "sphinx>=5.3,<9",
  "pre-commit>=2.20,<4",
  "flake8>=7,<8"
]

# 包发现（建议显式写上）
[tool.setuptools.packages.find]
# 如果你的包位于仓库根目录的 `pysme/`，如下足够；
# 若采用 src 布局，则换成 where=["src"]，并 include=["pysme*"]
where=["src"]
include = ["pysme*"]

# Versioneer 配置（务必与仓库实际路径一致）
[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/pysme/_version.py"   # 运行 `versioneer install` 会生成
versionfile_build = "src/pysme/_version.py"
tag_prefix = "v"                            # 例如你的 tag 形如 v1.2.3，可写 "v"
parentdir_prefix = "pysme-"

# Black: 代码格式化配置
[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
